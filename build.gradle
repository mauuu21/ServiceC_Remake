plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'checkstyle'
    id 'com.github.spotbugs-base' version '5.0.13'
    id 'com.bmuschko.docker-remote-api' version '9.0.1'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'


    compileOnly 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

task copyDockerFile(type: Copy) {
    group = 'docker'

    from file("./Dockerfile")
    into file("./build/libs/")

}

def imageName = "educodehunters/service-c-form-service"

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task buildDockerImageAsLatest(type: DockerBuildImage) {
    dependsOn copyDockerFile
    dependsOn assemble
    group = 'docker'

    inputDir = file("${projectDir}/build/libs")
    images.add("${imageName}:latest")
    noCache = true
}

spotbugs {
    toolVersion = '5.0.13'
    excludeFilter.set(file("$rootDir/configurations/spotbugs-ignore.xml"))
}

checkstyle {
    toolVersion '8.36.1'
    configFile file("$rootDir/configurations/checkstyle.xml")

    sourceSets = [project.sourceSets.main]
}

checkstyleMain {
    source = 'src/main/java'
}
